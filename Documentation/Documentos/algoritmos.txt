Busqueda básica: Por autor, genero o país => Muestra los mejos valorados en general
Busqueda colaborativa: Se necesitará de la creación de una comunidad de usuarios -> libro com mejores puntuaciones 
	leidos por usuarios de esa comunidad
Busqueda por comunidad: se crearán comunidades de libros, autores parecidos


//DEVUELVE LOS LIBROS LEIDOS POR ESA PERSONA QUE TENGAN MAS DE UN 3 (POR ESA PERSONA)

MATCH (n:READER{name:"David Gonzalez"})-[r:READ]->(b:BOOK)
WHERE r.grade>4
RETURN b,n,b.title AS titulo, n.name as nombre

//
MATCH (n:READER{name:"David Gonzalez"})-[r:READ]->(b:BOOK)
MATCH(b)-[:IS]-(g:GENRE)
WHERE r.grade >4
RETURN b,n,g

// DEVUELVE TODOS LOS LIBROS LEIDOS POR DAVID QUE TENGAN grade>4 y sus generos en comúnç
// EL SABER QUE GENEROS TIENEN EN COMÚN NOS AYUDARA MÁS ADELANTE A REALIZAR LA RECOMENDACIO
// ya que son esos en los que nos debemos de fijar

MATCH (n:READER{name:"David Gonzalez"})-[r:READ]->(b:BOOK)
MATCH(b)-[:IS]-(g:GENRE)<--(b2:BOOK)<-[r2:READ]-(n)
WHERE r.grade >4 AND r2.grade>4
RETURN b,n,g

//GENEROS EN COMUN (37 nodos Vs 54 generos no en común)
MATCH (n:READER{name:"David Gonzalez"})-[r:READ]->(b:BOOK)
MATCH(b)-[:IS]-(g:GENRE)<--(b2:BOOK)<-[r2:READ]-(n)
RETURN b,n,g

//CUENTA CUANTAS VECES SE REPITE CADA GENERO EN LOS LIBROS DE DAVID
MATCH (n:READER{name:"David Gonzalez"})-[r:READ]->(b:BOOK)--> (g:GENRE)
RETURN g.genre AS GENERO, count(*)
ORDER BY count(*) DESC

//DEVUELVE UNICAMENTE LOS GENEROS QUE TIENEN MAS DE 8 libros
MATCH (n:READER{name:"David Gonzalez"})-[r:READ]->(b:BOOK)--> (g:GENRE)
WITH g,count(*) as libros
WHERE libros >8
RETURN g.genre AS GENERO, libros
ORDER BY libros DESC

// QUE LIBROS HAN LEIDO LAS PERSONAS QUE HAN LEIDO EL LIBRO X=Insurgent Y CUANTAS VECES SE REPITE
MATCH (b:BOOK {title:"Insurgent"})-- (a) --(c:BOOK)
RETURN c.title AS Titulo, count(c.title) AS Lectores
ORDER BY Lectores DESC

//Todos los libros y el numero de personas que lo han leido
MATCH (a:READER)-->(b:BOOK)
RETURN b.title AS Libro, count(b) AS Lectores
ORDER BY Lectores DESC

//NOTA MEDIA DE LOS LIBROS
MATCH (a:READER {name:"David Gonzalez"})-[r:READ]->(b)-->(g:GENRE)
RETURN g.genre AS GENERO, count(g) AS LIBROS, toFloat(sum(r.grade))/count(g) AS NOTA
ORDER BY LIBROS DESC

//RETURN DISTINCT b devuelve solo 1 vez b en tablas